public class Solution {
    /**
     * @param n: An integer
     * @param nums: An array
     * @return: the Kth largest element
     */
    public int kthLargestElement(int n, int[] nums) {
        // write your code here
        int left = 0, right = nums.length - 1;
        int count = 0;
        while(left <= right) {
            int pos = partition(nums, left, right);
            if(pos == n - 1) {
                return nums[pos];
            } else if(pos > n - 1) {
                right = pos - 1;
            } else {
                left = pos + 1;
            }
        }
        return 0;
    }
    private int partition(int[] nums, int left, int right) {
        if(left >= right) {
            return left;
        }
        int pivot = nums[left];
        int i = left + 1, j = right;
        while(i <= j) {
            while(i <= j && nums[i] > pivot) {
                i++;
            }
            while(i <= j && nums[j] < pivot) {
                j--;
            }
            if(i <= j) {
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                i++;
                j--;
            }
        }
        nums[left] = nums[j];
        nums[j] = pivot;
        return j;
    }
}
