Problem Statement:

Given a sorted array, create a new array containing squares of all
the number of the imput array in the sorted order

Example:

Input: [-2, -1, 0, 2, 3]
Output: [0, 1, 4, 4, 9]

I think the biggest number comes from the square of leftend number or rightend number.
So use two pointer to solve this.

class SortedArraySquares {

  public static int[] makeSquares(int[] arr) {
    int[] squares = new int[arr.length];
    // TODO: Write your code 
    int bigIndex = arr.length - 1;
    int left = 0, right = arr.length - 1;
    while(left < right) {
      int leftSquare = arr[left] * arr[left];
      int rightSquare = arr[right] * arr[right];
      if(leftSquare >= rightSquare) {
        squares[bigIndex--] = leftSquare;
        left++;
      } else {
        squares[bigIndex--] = rightSquare;
        right--;
      }
    }
    return squares;
  }
}


