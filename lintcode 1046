public class Solution {
    /**
     * @param L: an integer
     * @param R: an integer
     * @return: the count of numbers in the range [L, R] having a prime number of set bits in their binary representation
     */
    public int countPrimeSetBits(int L, int R) {
        int res = 0;
    	boolean[] notPrime = new boolean[33];
    	notPrime[1] = true;
    	for(int i = 2; i < 33; i++) {
    	    if(notPrime[i] == false) {
    	        for(int j = 2; i * j < 33; j++) {
    	            notPrime[i * j] = true;
    	        }
    	    }
    	}
    	for(int i = L; i <= R; i++) {
    	    int t = i;
    	    int cnt = 0;
    	    while(t > 0) {
    	        if((t & 1) == 1) {
    	            cnt++;
    	        }
    	        t >>= 1;
    	    }
    	    if(notPrime[cnt] == false) {
    	        res++;
    	    }
    	}
    	return res;
	}
}
