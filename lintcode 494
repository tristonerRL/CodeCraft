public class Stack {
    /*
     * @param x: An integer
     * @return: nothing
     */
    Queue<Integer> q1;
    Queue<Integer> q2;
    public Stack() {
        q1 = new LinkedList<Integer>();
        q2 = new LinkedList<Integer>();
    }
    public void push(int x) {
        // write your code here
        if(q1.isEmpty()) {
            q1.offer(x);
            while(!q2.isEmpty()) {
                q1.offer(q2.poll());
            }
        }
        else {
            q2.offer(x);
            while(!q1.isEmpty()) {
                q2.offer(q1.poll());
            }
        }
    }

    /*
     * @return: nothing
     */
    public void pop() {
        // write your code here
        if(!q1.isEmpty()) {
            q1.poll();
        } else {
            q2.poll();
        }
    }

    /*
     * @return: An integer
     */
    public int top() {
        // write your code here
        if(!q1.isEmpty()) {
            return q1.peek();
        }
        else {
            return q2.peek();
        }
    }

    /*
     * @return: True if the stack is empty
     */
    public boolean isEmpty() {
        // write your code here
        return q1.isEmpty() && q2.isEmpty();
    }
    
}
